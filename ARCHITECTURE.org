* Project structure

Each library has headers in two folders:
- public headers in =include/<lib>/=
- private headers along source files in =src/=

They have 3 include path:
- a PUBLIC SYSTEM at =include/=, included with =#include <<lib>/module1/header.h>=
- a PRIVATE include dir at =include/<lib>/=, that allows source files to import public headers with =#include "module1/header.h"=
- a PRIVATE include dir at =src/=, that allows source files to import private headers with =#include "module1/private_header_in_src.h"=public

So the source files of the library import headers using the path from the src directory, and public headers *have* to include the =<lib>= prefix.

** Exo
General purpose library that contains seveeral modules.

*** Base
The base module contains the fundamentals types and fuctions used everywhere else.

Similar to Google's abseil, all files in Base can only depend on other Base file.
It should be kept to the minimum of what is necessary.

*** Maths
Contains various math types and functions, mainly linear algebra for now.

*** Cross
Platform abstraction layer.

*** Collections
*** Memory
- Allocators
- String interner

** Engine
Engine contains the code of the game engine.

*** Assets
*** Render
*** Gameplay
** Editor
Executable

* Detailled systems
** Asset manager
*** TODO Adding an asset type
