#include "types.h"
#include "voxels.h"

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(set = 1, binding = 0) uniform VO {
    VoxelOptions voxel_options;
};

layout(set = 1, binding = 1) writeonly uniform image3D voxels_albedo;
layout(set = 1, binding = 2) writeonly uniform image3D voxels_normal;
layout(set = 1, binding = 3) writeonly uniform image3D voxels_radiance;
// layout(set = 0, binding = 3) writeonly uniform image3D voxels_radiance;

void main()
{
    ivec3 voxel_pos = ivec3(gl_GlobalInvocationID);

    if (voxel_pos.x > voxel_options.res || voxel_pos.y > voxel_options.res || voxel_pos.z > voxel_options.res) {
        return;
    }

    imageStore(voxels_albedo, voxel_pos, float4(0.0));
    imageStore(voxels_normal, voxel_pos, float4(0.0));
    imageStore(voxels_radiance, voxel_pos, float4(0.0));
}
